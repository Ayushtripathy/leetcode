class Solution {
    public int longestPalindromeSubseq(String s) {
        int n = s.length();
        
        int[][] dp = new int[n][n];
        
        for (int i = 0; i < n; i++) {
            for (int row = 0, col = i; row < n && col < n; row++, col++) {
                if(i == 0) dp[row][col] = 1;
                else if(i == 1) {
                    if(s.charAt(row) == s.charAt(col)) dp[row][col] = 2;
                    else dp[row][col] = 1;
                } else {
                    if(s.charAt(row) == s.charAt(col)) dp[row][col] = 2 + dp[row + 1][col - 1];
                    else dp[row][col] = Math.max(dp[row + 1][col], dp[row][col - 1]);
                }
            }
        }
        
        return dp[0][n - 1];
    }
}
