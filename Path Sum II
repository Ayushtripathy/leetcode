/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private static void solve(TreeNode root, int sum,
                                             List<Integer> temp, List<List<Integer>> ans) {
        sum -= root.val;
        temp.add(root.val);
        if(root.left == null && root.right == null) {
            if(sum == 0) {
                ans.add(new ArrayList<>(temp));
            }
            
        } else {
            if(root.left != null) solve(root.left, sum, temp, ans);
            if(root.right != null) solve(root.right, sum, temp, ans);
        }
        
        temp.remove(temp.size() - 1);
    }
    
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null) return ans;
        List<Integer> temp = new ArrayList<>();
        solve(root, sum, temp, ans);
        return ans;
    }
}
