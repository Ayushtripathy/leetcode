class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> s = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("/") || 
                    tokens[i].equals("*")) {
                int num2 = s.pop();
                int num1 = s.pop();
                
                if(num2 == 0 && tokens[i].equals("/")) s.push(0);
                else if(tokens[i].equals("/")) s.push(num1 / num2);
                else if(tokens[i].equals("+")) s.push(num1 + num2);
                else if(tokens[i].equals("-")) s.push(num1 - num2);
                else if(tokens[i].equals("*")) s.push(num1 * num2);
            } else {
                int num = Integer.parseInt(tokens[i]);
                s.push(num);
            }
        }
        return s.pop();
    }
}
