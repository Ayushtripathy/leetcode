/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    static int fl= Integer.MAX_VALUE;
    
    public static void floor(TreeNode root, int data){
        if(root==null) return;
        
        if(root.val>data) {
            if(fl>root.val)
                fl= root.val;
            floor(root.left, data);
        }
        else floor(root.right, data);
    }
    
    public int kthSmallest(TreeNode root, int k) {
        int max= Integer.MIN_VALUE;
        for(int i=0; i<k; i++){
            // System.out.println(max + " here ");
            fl = Integer.MAX_VALUE;
            floor(root, max);
            // System.out.println(fl);
            max= fl;
        }
        
        return fl;
    }
}
