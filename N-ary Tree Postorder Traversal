/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    private static void rec(Node root, List<Integer> ans) {
        
        for(int i = 0; i < root.children.size(); i++) rec(root.children.get(i), ans);
        ans.add(root.val);
    }
    
    private static void itr(Node root, List<Integer> ans) {
        Stack<Node> s = new Stack<>();
        s.add(root);
        while(s.size() > 0) {
            Node curr = s.pop();
            ans.add(curr.val);
            for (int i = 0; i < curr.children.size(); i++) {
                s.push(curr.children.get(i));
            }
        }
        Collections.reverse(ans);
        // return ans;
    }
    
    public List<Integer> postorder(Node root) {
        List<Integer> ans = new ArrayList<>();
        if(root == null) return ans;
        // rec(root, ans);
        itr(root, ans);
        return ans;
    }
}
